plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.+'
	id "com.modrinth.minotaur" version "2.+"
}

apply plugin: "com.modrinth.minotaur"
apply plugin: "com.matthewprenger.cursegradle"

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		name "SquidDev"
		url "https://squiddev.cc/maven"
	}
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.pitan76.net/" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// TRのエネルギー用
	modImplementation 'RebornCore:RebornCore-1.19:5.4.0'
	modImplementation 'TechReborn:TechReborn-1.19:5.4.0'

	modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:9.1.682"

	// CC: Restitched
	modApi 'com.electronwill.night-config:core:3.6.6'
	modApi 'com.electronwill.night-config:toml:3.6.6'

	modApi "com.github.cc-tweaked:cc-restitched:${project.cc_version}"

	// Mod Menu
	// 1.16 => 1.16.19
	// 1.17 => 2.0.14
	//modApi "com.terraformersmc:modmenu:2.0.10"

	// Cloth Config API
	/*
	modApi("me.shedaniel.cloth:cloth-config-fabric:11.1.118") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	 */

	modImplementation "net.pitan76:mcpitanlib-fabric${rootProject.mcpitanlib_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 8
	def targetVersion = 17
	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = targetVersion
	}
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

if (System.getenv("CURSEFORGE_TOKEN") != null) {
	curseforge {
		apiKey = System.getenv("CURSEFORGE_TOKEN")
		project {
			id = '543089'
			changelog = project.changelog
			releaseType = 'release'
			addGameVersion "Fabric"
			addGameVersion project.minecraft_version
			relations {
				requiredDependency "fabric-api"
				requiredDependency "techreborn"
				requiredDependency "reborncore"
				requiredDependency "mcpitanlibarch"
				optionalDependency "roughly-enough-items"
				optionalDependency "cc-tweaked"
			}

			mainArtifact(tasks.remapJar)
		}
	}
}

if (System.getenv("MODRINTH_TOKEN") != null) {
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'ir8okcEA'
		versionNumber = project.minecraft_version + "-" + project.mod_version + "-fabric"
		gameVersions = [project.minecraft_version]
		versionType = 'release'
		uploadFile = tasks.remapJar
		changelog = project.changelog
		loaders = ["fabric"]
		dependencies {
			required.project "P7dR8mSH" // Fabric API
		}
	}
}